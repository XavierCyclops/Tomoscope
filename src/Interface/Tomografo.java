/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;

import graficar.*;

// Adquisiciones del HandyScope HS3 56 22 66 90 ext 108 roberto herrera
import AdquirirHS.*;
import Abrir_flujo.*;
import Cerrar_flujo.*;
import GetTriggerOn.*;
import GetTriggerOff.*;
import com.mathworks.toolbox.javabuilder.MWException;
import com.jmatio.io.MatFileWriter;
import com.jmatio.types.MLDouble;
import com.mathworks.toolbox.javabuilder.MWClassID;
import com.mathworks.toolbox.javabuilder.MWComplexity;
import com.mathworks.toolbox.javabuilder.MWNumericArray;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import program.design;

/**
 *
 * @author Francisco Javier Gonzalez Huerta
 * @author Javier Juárez Carrillo 
 * UNAM 2016
 */
public class Tomografo extends javax.swing.JFrame{

    //Enciende y conecta motores
    Motores prueba = new Motores();
    //Arduino ardi = new Arduino();
    //double temp;

    // Usuario
    private int AMPLITUDE;    // 0 <= AMPLITUDE <= 12
    private double FSIG;      // Frecuencia de señal -- 500000
    private double FM;        // Frecuencia de muestra; 0 <= FM <= 50000 -- 50000000
    private double LADQ;      // Tamaño Adquisicion; 0 <= LADQ <= 120000 -- 20000 ~ 30000
    private int NMEAN;        // Número de disparos 

    private double[][] ADQUISICION; // Adquisición de la señal

    /*
     Se crea un nuevo objeto ControlHandyScope que contiene las configuraciones
     del HS3
     */
    private String HS = "HS3";
    ControlHandyScope chs = new ControlHandyScope();

    AdquirirHSC ahs;
    Abrir_flujoC afc;
    Cerrar_flujoC cfc;
    GetTriggerOnC gto;
    GetTriggerOffC gtf;
    Grafica grt;
    
    design reconstruccion;

    /* SerialPortEventListener sp = new SerialPortEventListener(){
     public void serialEvent(SerialPortEvent arg0){
     try{
     if(ardi.MessageAvaliable() == true){
     String a = ardi.PrintMessage();
     temp = Double.parseDouble((a));
     System.out.println(temp);
     } 
     }catch(Exception e){
     e.printStackTrace();
     }    
     }
     };
     */
    public Tomografo() {
        initComponents();
        setResizable(false);
        setTitle("Tomografo-Facultad de Ciencias-GHFJ");
        ((JPanel) getContentPane()).setOpaque(false);
        ImageIcon ichi = new ImageIcon(this.getClass().getClassLoader().getResource("Interface/images/gray.jpg"));
        JLabel fond = new JLabel();
        fond.setIcon(ichi);
        getLayeredPane().add(fond, JLayeredPane.FRAME_CONTENT_LAYER);
        fond.setBounds(0, 0, ichi.getIconWidth(), ichi.getIconHeight());
        coneccion.setValue(50);

        /*  try{
         ardi.ArduinoRXTX("COM3",2000,9600,sp);
         }catch(Exception e1){
         e1.printStackTrace();
         }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked");
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Seniales = new javax.swing.ButtonGroup();
        radio_sinc = new javax.swing.JRadioButton();
        radio_square_neg = new javax.swing.JRadioButton();
        radio_square_pos = new javax.swing.JRadioButton();
        rad_sin = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        FSig = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        coneccion = new javax.swing.JProgressBar();
        radial = new javax.swing.JToggleButton();
        abanico = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        iniciar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        adquisicion = new javax.swing.JSpinner();
        Fm = new javax.swing.JSpinner();
        Amp = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        Disparos = new javax.swing.JTextField();
        Image = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        guardar = new javax.swing.JMenuItem();
        Cargar = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Seniales.add(radio_sinc);
        radio_sinc.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        radio_sinc.setForeground(new java.awt.Color(255, 255, 255));
        radio_sinc.setText("Funcion Sinc");
        radio_sinc.setFocusable(false);
        radio_sinc.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        radio_sinc.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        radio_sinc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_sincActionPerformed(evt);
            }
        });

        Seniales.add(radio_square_neg);
        radio_square_neg.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        radio_square_neg.setForeground(new java.awt.Color(255, 255, 255));
        radio_square_neg.setText("Pulso Cuadrado Negativo");
        radio_square_neg.setFocusable(false);
        radio_square_neg.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        radio_square_neg.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        radio_square_neg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_square_negActionPerformed(evt);
            }
        });

        Seniales.add(radio_square_pos);
        radio_square_pos.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        radio_square_pos.setForeground(new java.awt.Color(255, 255, 255));
        radio_square_pos.setText("Pulso Cuadrado Positivo");
        radio_square_pos.setFocusable(false);
        radio_square_pos.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        radio_square_pos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        radio_square_pos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_square_posActionPerformed(evt);
            }
        });

        Seniales.add(rad_sin);
        rad_sin.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        rad_sin.setForeground(new java.awt.Color(255, 255, 255));
        rad_sin.setText("Pulso Senoidal Modulado");
        rad_sin.setFocusable(false);
        rad_sin.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        rad_sin.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rad_sin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rad_sinActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("SEÑALES");

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Amplitud");

        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Frecuencia Transductor");

        FSig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FSigActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Frecuencia Muestreo");

        jLabel5.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tamaño de Obtencion");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("MOTORES");

        coneccion.setForeground(new java.awt.Color(204, 255, 204));
        coneccion.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                coneccionAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        radial.setBackground(new java.awt.Color(0, 0, 0));
        radial.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        radial.setForeground(new java.awt.Color(255, 255, 255));
        radial.setText("Radial");
        radial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radialActionPerformed(evt);
            }
        });

        abanico.setBackground(new java.awt.Color(0, 0, 0));
        abanico.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        abanico.setForeground(new java.awt.Color(255, 255, 255));
        abanico.setText("Abanico");
        abanico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abanicoActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SALIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        iniciar.setBackground(new java.awt.Color(0, 0, 0));
        iniciar.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        iniciar.setForeground(new java.awt.Color(255, 255, 255));
        iniciar.setText("INICIAR");
        iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("RECONSTRUCCION");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("CANCELAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        adquisicion.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 128000.0d, 2.0d));
        adquisicion.setToolTipText("[Samples per channel]");
        adquisicion.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                adquisicionMouseWheelMoved(evt);
            }
        });

        Fm.setModel(new javax.swing.SpinnerNumberModel(0.0d, 0.0d, 5.0E7d, 100.0d));
        Fm.setToolTipText("[MHz]");
        Fm.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Fm.setName(""); // NOI18N

        Amp.setModel(new javax.swing.SpinnerNumberModel(0, 0, 12, 1));
        Amp.setToolTipText("[V]");

        jLabel8.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Número de Disparos");

        javax.swing.GroupLayout ImageLayout = new javax.swing.GroupLayout(Image);
        Image.setLayout(ImageLayout);
        ImageLayout.setHorizontalGroup(
            ImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        ImageLayout.setVerticalGroup(
            ImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 408, Short.MAX_VALUE)
        );

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("Sinograma");

        jMenu7.setText("Archivo");

        jMenuItem5.setText("Abrir Proyecto");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem5);

        guardar.setText("Guardar Señales");
        guardar.setContentAreaFilled(false);
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        jMenu7.add(guardar);

        Cargar.setText("Cargar Señales");
        Cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CargarActionPerformed(evt);
            }
        });
        jMenu7.add(Cargar);

        jMenuItem1.setText("Imprimir Señales");
        jMenu7.add(jMenuItem1);

        jMenuItem2.setText("Salir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem2);

        jMenuBar2.add(jMenu7);

        jMenu1.setText("Edicion");

        jMenuItem6.setText("Seleccionar Señal");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem9.setText("Zoom");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem9);

        jMenuItem8.setText("Reiniciar Tomografia");
        jMenu1.add(jMenuItem8);

        jMenuItem10.setText("Estado de Motores");
        jMenu1.add(jMenuItem10);

        jMenuItem11.setText("Mostrar Matriz");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem11);

        jMenuBar2.add(jMenu1);

        jMenu2.setText("Herramientas");

        jMenuItem12.setText("Reconstruir Imagen");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jMenuItem13.setText("Manipular Señales");
        jMenu2.add(jMenuItem13);

        jMenuItem14.setText("Comparar Señales");
        jMenu2.add(jMenuItem14);

        jMenuBar2.add(jMenu2);

        jMenu5.setText("Ayuda");

        jMenuItem16.setText("Manual de Usuario");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem16);

        jMenuItem15.setText("Informacion");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem15);

        jMenuBar2.add(jMenu5);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rad_sin)
                                    .addComponent(radio_square_neg)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(radio_sinc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(radio_square_pos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel8)
                                            .addComponent(radial, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(30, 30, 30))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(FSig)
                                    .addComponent(adquisicion)
                                    .addComponent(Fm)
                                    .addComponent(Amp)
                                    .addComponent(Disparos)
                                    .addComponent(abanico)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(coneccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Image, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(114, 114, 114)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(iniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(188, 188, 188)))
                .addGap(80, 80, 80))
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(radio_sinc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radio_square_pos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rad_sin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radio_square_neg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Amp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(FSig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Fm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(adquisicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(Disparos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radial)
                            .addComponent(abanico))
                        .addGap(59, 59, 59)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(coneccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
        );

        Fm.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // TODO add your handling code here:
        new baseDatos().setVisible(true);
    }//GEN-LAST:event_guardarActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void FSigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FSigActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FSigActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void radialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radialActionPerformed
        // Aqui acomodamos el motor para radial
        if (true == radial.isSelected()) {
            radial.setOpaque(true);
            abanico.setSelected(false);
            coneccion.setValue(100);
            prueba.enviaDatos("3");

        }
    }//GEN-LAST:event_radialActionPerformed

    private void abanicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abanicoActionPerformed
        // Y aqui para abanico
        if (abanico.isSelected() == true) {
            abanico.setOpaque(true);
            radial.setSelected(false);
            coneccion.setValue(100);
            prueba.enviaDatos("3");

        }
    }//GEN-LAST:event_abanicoActionPerformed

    private void coneccionAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_coneccionAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_coneccionAncestorAdded

    private void iniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarActionPerformed
// Se inicia el modo radial
        LADQ = (Double) adquisicion.getValue(); // Samples
        FM = (Double) Fm.getValue();
        chs.ConfigurationHS(HS, LADQ, FM);

        AMPLITUDE = (int) Amp.getValue();
        FSIG = Integer.parseInt(FSig.getText());
        NMEAN = Integer.parseInt(Disparos.getText());

        boolean sinc = radio_sinc.isSelected();
        boolean pulso_cp = radio_square_pos.isSelected();
        boolean senoidal = rad_sin.isSelected();
        boolean pulso_cn = radio_square_neg.isSelected();

        byte opcion_senial = 0;

        if (sinc) {
            opcion_senial = 4;
        } else if (pulso_cp) {
            opcion_senial = 2;
        } else if (senoidal) {
            opcion_senial = 1;
        } else if (pulso_cn) {
            opcion_senial = 3;
        } else {
            opcion_senial = 2;
        }

        chs.ConfigGenerator(HS, AMPLITUDE, FSIG, FM, opcion_senial);
        try {
            ahs = new AdquirirHSC();
            afc = new Abrir_flujoC();
            cfc = new Cerrar_flujoC();
            gto = new GetTriggerOnC();
            gtf = new GetTriggerOffC();
            grt = new Grafica();
            
        } catch (MWException ex) {
            Logger.getLogger(Tomografo.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (radial.isSelected() == true || (radial.isSelected() == false && abanico.isSelected() == false)) {
            System.out.println("Hi 1");
            try {
                ADQUISICION = new double[NMEAN * 100][];
                for (int j = 0; j < 100; j++) {
                    System.out.println("hi 2");
                    Object[] tmp = null;
                    for (int i = 0; i < NMEAN; i++) {
                        Thread.sleep(2500);
                        gto.GetTriggerOn(HS);
                        afc.Abrir_flujo(HS);
                        System.out.println("hi 3");
                        // Empieza adquisición de señales
                        //ADQUISICION[j] = Arrays.toString(ahs.AdquirirHS(2, HS, LADQ));
                        tmp = ahs.AdquirirHS(2, HS, LADQ);
                        System.out.println("hi 4");
                        //MWNumericArray tmp_one = (MWNumericArray) tmp[0];
                        //double[] el_bueno = tmp_one.getDoubleData();
                        //System.out.println(Arnrays.toString(el_bueno));
                        cfc.Cerrar_flujo(HS);
                        gtf.GetTriggerOff(HS);
                        //System.out.println(Arrays.toString(ADQUISICION));
                    }

                    MWNumericArray tmp_one = (MWNumericArray) tmp[0];
                    double[] el_bueno = tmp_one.getDoubleData();
                    ADQUISICION[j] = el_bueno;
                    //Impresion de imagen de sinograma
                    //grt.graficar(tmp_one,j);
                    
                    prueba.enviaDatos("1");
                    prueba.enviaDatos("2");
                }
                
                MLDouble mlDouble = new MLDouble("ADQUISICION", ADQUISICION);
                ArrayList list = new ArrayList();
                list.add(mlDouble);


                
                new MatFileWriter("resultados.mat", list);
                System.out.println("FINALIZADO");
                //System.out.println(Arrays.toString(ADQUISICION));
                /*Double[] ADQFILE = new Double[ADQUISICION.length];
                 for(int i = 0; i < ADQUISICION.length; i++) {
                 double tmp;
                 tmp = (double) ADQUISICION[i];
                 ADQFILE[i] = tmp;
                 }*/
                //System.out.println(Arrays.toString(ADQFILE));
                
            } catch (InterruptedException ex) {
                Logger.getLogger(Tomografo.class.getName()).log(Level.SEVERE, null, ex);
                Thread.currentThread().interrupt();
            } catch (MWException | IOException ex) {
                Logger.getLogger(Tomografo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
// Se inicia el modo abanico 
        if (abanico.isSelected() == true) {
            try {
                for (int j = 0; j < 100; j++) {
                    prueba.enviaDatos("2");
                    for (int k = 0; k <= 100; k++) {
                        for (int i = 0; i < NMEAN; i++) {
                            Thread.sleep(2000);
                            afc.Abrir_flujo(HS);
                            gto.GetTriggerOn(HS);
                            //ADQUISICION[i] = ahs.AdquirirHS(2, HS, LADQ);
                            gtf.GetTriggerOff(HS);
                            cfc.Cerrar_flujo(HS);
                            //System.out.println(Arrays.toString(ADQUISICION));
                            System.out.println(ADQUISICION[i]);
                        }
                        prueba.enviaDatos("1");
                        // Thread.sleep(3000);
                    }
                }
            } catch (InterruptedException ex) {
                Logger.getLogger(Tomografo.class.getName()).log(Level.SEVERE, null, ex);
                Thread.currentThread().interrupt();
            } catch (MWException ex) {
                Logger.getLogger(Tomografo.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_iniciarActionPerformed

    private void CargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CargarActionPerformed
        // TODO add your handling code here:
        new Charge().setVisible(true);
    }//GEN-LAST:event_CargarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        prueba.enviaDatos("4");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        reconstruccion = new design();
        reconstruccion.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void adquisicionMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_adquisicionMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_adquisicionMouseWheelMoved

    private void radio_sincActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_sincActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_sincActionPerformed

    private void radio_square_posActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_square_posActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_square_posActionPerformed

    private void rad_sinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rad_sinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rad_sinActionPerformed

    private void radio_square_negActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_square_negActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio_square_negActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tomografo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Tomografo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner Amp;
    private javax.swing.JMenuItem Cargar;
    private javax.swing.JTextField Disparos;
    private javax.swing.JTextField FSig;
    private javax.swing.JSpinner Fm;
    private javax.swing.JPanel Image;
    private javax.swing.ButtonGroup Seniales;
    private javax.swing.JToggleButton abanico;
    private javax.swing.JSpinner adquisicion;
    private javax.swing.JProgressBar coneccion;
    private javax.swing.JMenuItem guardar;
    private javax.swing.JButton iniciar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JRadioButton rad_sin;
    private javax.swing.JToggleButton radial;
    private javax.swing.JRadioButton radio_sinc;
    private javax.swing.JRadioButton radio_square_neg;
    private javax.swing.JRadioButton radio_square_pos;
    // End of variables declaration//GEN-END:variables
}
